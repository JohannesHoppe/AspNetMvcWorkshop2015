@Html.ActionLink("Reset Data", "Reset", "api", null, new { @class = "btn btn-warning btn-lg", target="_blank" }) 


<div id="index_template">

    <h1 data-bind="text: header">Kunden</h1>
    
    <div data-bind="foreach: customers">
        
        <div class="panel panel-default pull-left col-md-5 " style="padding:0; margin-right: 20px;">

            <img data-bind="attr:{ src: $root.image($data)  }" class="img-thumbnail pull-right" />

            <div class="panel-heading" data-bind="text: FirstName">Name</div>
            <div class="panel-body">

                <form class="form-horizontal">

                    <div class="form-group">

                        <label class="col-sm-2 control-label">#</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" data-bind="textInput: Id">
                        </div>

                    </div>

                    <div class="form-group">

                        <label class="col-sm-2 control-label">FirstName</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" data-bind="textInput: FirstName">
                        </div>

                    </div>

                    <div class="form-group">

                        <label class="col-sm-2 control-label">LastName</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" data-bind="textInput: LastName">
                        </div>

                    </div>
                    
                    <div class="form-group">

                        <label class="col-sm-2 control-label">DateOfBirth</label>
                        <div class="col-sm-7">
                            <input type="text"
                                   class="datepicker"
                                   data-bind="textInput: DateOfBirth, my_kendo_datepicker: { format: 'dd.MM.yyyy' }">
                        </div>

                    </div>
                    
                    <div class="form-group">

                        <label class="col-sm-2 control-label">DateOfBirth</label>
                        <div class="col-sm-7">
                            <input type="text"
                                   class="datepicker"
                                   data-bind="my_kendo_datepicker2: DateOfBirth, datepickerOptions: { format: 'dd.MM.yyyy' }">
                        </div>

                    </div>

                </form>
            </div>
        </div>

    </div>


    
    <br style="clear: both;">
    <!--
    <h4>Debug</h4>
    <pre data-bind="text: ko.toJSON($data, null, 2)"></pre>
    -->

</div>

@section scripts {
    
    <script>
        var model = new CustomerViewModel();
        ko.applyBindings(model, $('#index_template').get(0));
        model.loadData();

        ko.bindingHandlers.my_kendo_datepicker = {
            init: function(element, valueAccessor) {
                var options = valueAccessor() || {};
                $(element).kendoDatePicker(options);
            }
        };

        ko.bindingHandlers.my_kendo_datepicker2 = {
            init: function(element, valueAccessor, allBindingsAccessor) {

                //initialize datepicker with some optional options
                var options = allBindingsAccessor().datepickerOptions || {};
                var datepicker = $(element).kendoDatePicker(options).data('kendoDatePicker');

                // populate changes from Kendo UI world to Knockout world
                datepicker.bind("change", function() {

                    var value = datepicker.value();
                    var observable = valueAccessor();

                    if (value === observable()) {
                        return;
                    }

                    console.log("change in Kendo UI", value);
                    observable(value);
                });

                //handle disposal (if KO removes by the template binding)
                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                    datepicker.destroy();
                });
            },

            update: function (element, valueAccessor) {

                //update the control when the view model changes
                var value = ko.utils.unwrapObservable(valueAccessor());
                var datepicker = $(element).data('kendoDatePicker');

                if (value === datepicker.value()) {
                    return;
                }

                console.log("change in Knockout", value);
                datepicker.value(value);
            }
        }

    </script>
}